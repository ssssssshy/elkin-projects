"""Лабораторная работа №1
РАБОТА В IDLE. ИСПОЛЬЗОВАНИЕ
АРИФМЕТИЧЕСКИХ ОПЕРАЦИЙ. СОЗДАНИЕ СПИСКОВ
И СЛОВАРЕЙ. РАБОТА С ЦИКЛАМИ.
Написать функцию, которая принимает два целочис-
ленных списка и возвращает True, если первые или последние
элементы данных списков равны. Оба списка содержат 1 или
более элементов."""


def check_first_last_equal(list1, list2):
    """
    Проверяет, равны ли первые или последние элементы двух списков.

    Args:
        list1: первый список (минимум 1 элемент)
        list2: второй список (минимум 1 элемент)

    Returns:
        bool: True если первые ИЛИ последние элементы равны, иначе False
    """
    # Проверяем первые элементы
    first_equal = list1[0] == list2[0]

    # Проверяем последние элементы
    last_equal = list1[-1] == list2[-1]

    # Возвращаем True если хотя бы одно условие выполняется
    return first_equal or last_equal


# Тестирование функции
if __name__ == "__main__":
    # Тест 1: первые элементы равны
    list1 = [1, 2, 3]
    list2 = [1, 4, 5]
    print(f"Тест 1: {list1} и {list2} -> {check_first_last_equal(list1, list2)}")

    # Тест 2: последние элементы равны
    list3 = [1, 2, 3]
    list4 = [4, 5, 3]
    print(f"Тест 2: {list3} и {list4} -> {check_first_last_equal(list3, list4)}")

    # Тест 3: и первые и последние равны
    list5 = [1, 2, 3]
    list6 = [1, 5, 3]
    print(f"Тест 3: {list5} и {list6} -> {check_first_last_equal(list5, list6)}")

    # Тест 4: ни первые ни последние не равны
    list7 = [1, 2, 3]
    list8 = [4, 5, 6]
    print(f"Тест 4: {list7} и {list8} -> {check_first_last_equal(list7, list8)}")

    # Тест 5: списки из одного элемента
    list9 = [7]
    list10 = [7]
    print(f"Тест 5: {list9} и {list10} -> {check_first_last_equal(list9, list10)}")
